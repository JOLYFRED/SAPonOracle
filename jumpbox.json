{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "defaultValue": "jumpbox",
      "type": "string",
      "metadata": {
        "description": "Internal name of the Virtual Machine (won't be visible to the outside world)."
      }
    },
    "adminUsername": {
      "defaultValue": "demouser",
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machines (default: demouser)."
      }
    },
    "adminPassword": {
      "defaultValue": "demo@pass123",
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machines (default: demo@pass123)."
      }
    },
    "vmSize": {
      "defaultValue": "Standard_DS1_v2",
      "type": "string",
      "allowedValues": [
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2"
      ],
      "metadata": {
        "description": "The VM size of the jumpbox machine. Note that some VM sizes in the list are only available in some particular locations. Please check the availability and the price of the VM sizes at https://azure.microsoft.com/en-us/pricing/details/virtual-machines before deployment."
      }
    },
    "vmDnsPrefix": {
      "defaultValue": "saponoracle72jumpbox",
      "type": "string",
      "metadata": {
        "description": "The Prefix of the DNS name this VM can be connected by. Remainder of the DNS name depends on the Resource Group location (e.g. XXX.northeurope.cloudapp.azure.com). The whole DNS name must be globally unique."
      }
    },
    "vnetName": {
      "defaultValue": "IT-DevTest-Vnet",
      "type": "string",
      "metadata": {
        "description": "The Virtual Network this VM will be deployed to."
      }
    },
    "subnetName": {
      "defaultValue": "SAPPoc-DB",
      "type": "string",
      "metadata": {
        "description": "The subnet this VM will be deployed to."
      }
    }
  },
  "variables": {
    "vnetID": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "vmSubnet": "[concat(variables('vnetID'), '/subnets/', parameters('subnetName'))]",
    "nicName": "[concat(parameters('vmName'), '-nic')]",
    "pipName": "[concat(parameters('vmName'), '-pip')]",
    "nsgName": "[concat(parameters('vmName'), '-nsg')]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('vmName'),'-OsDisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "diskSizeGB": 127
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "provisioningState": "Succeeded",
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "provisioningState": "Succeeded",
              "privateIPAddress": "10.26.1.60",
              "privateIPAllocationMethod": "Static",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
              },
              "subnet": {
                "id": "[variables('vmSubnet')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [],
          "appliedDnsServers": [],
          "internalDomainNameSuffix": "3pxeb40fnqtudgzokewdh3e3ga.ax.internal.cloudapp.net"
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
        },
        "primary": true,
        "virtualMachine": {
          "id": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "provisioningState": "Succeeded",
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "provisioningState": "Succeeded",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ],
        "defaultSecurityRules": [
          {
            "name": "AllowVnetInBound",
            "properties": {
              "provisioningState": "Succeeded",
              "description": "Allow inbound traffic from all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowAzureLoadBalancerInBound",
            "properties": {
              "provisioningState": "Succeeded",
              "description": "Allow inbound traffic from azure load balancer",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 65001,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllInBound",
            "properties": {
              "provisioningState": "Succeeded",
              "description": "Deny all inbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowVnetOutBound",
            "properties": {
              "provisioningState": "Succeeded",
              "description": "Allow outbound traffic from all VMs to all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Outbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowInternetOutBound",
            "properties": {
              "provisioningState": "Succeeded",
              "description": "Allow outbound traffic from all VMs to Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Allow",
              "priority": 65001,
              "direction": "Outbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllOutBound",
            "properties": {
              "provisioningState": "Succeeded",
              "description": "Deny all outbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Outbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('pipName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "provisioningState": "Succeeded",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "[parameters('vmDnsPrefix')]",
          "fqdn": "[concat(parameters('vmDnsPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "name": "[concat(variables('nsgName'), '/default-allow-rdp')]",
      "apiVersion": "2017-06-01",
      "scale": null,
      "properties": {
        "provisioningState": "Succeeded",
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "3389",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 1000,
        "direction": "Inbound",
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
      ]
    }
  ]
}